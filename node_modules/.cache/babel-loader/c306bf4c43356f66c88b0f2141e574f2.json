{"ast":null,"code":"var _jsxFileName = \"D:\\\\acc\\\\04\\\\05\\\\src\\\\Shop.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Shop = () => {\n  class test extends React.Component {\n    constructor(...args) {\n      super(...args);\n      this.state = {\n        products: [{\n          title: 'Apple',\n          count: 0,\n          price: 100\n        }, {\n          title: 'IBM',\n          count: 0,\n          price: 200\n        }, {\n          title: 'HP',\n          count: 0,\n          price: 300\n        }]\n      };\n\n      this.onChange = (index, val) => {\n        setState(products.map((product, i) => i === index ? { ...product,\n          count: val\n        } : product));\n      };\n    }\n\n    render() {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(ProductList, {\n          products: this.state.products,\n          onChange: this.onChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Total, {\n          products: this.state.products\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this);\n    }\n\n  }\n\n  ;\n\n  const ProductList = ({\n    products,\n    onChange\n  }) => /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: \"container\",\n    children: products.map((product, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [product.title, /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: product.count,\n        onChange: e => onChange(i, parseInt(e.target.value) || 0)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: product.count\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this)]\n    }, i, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n\n  const Total = ({\n    products\n  }) => /*#__PURE__*/_jsxDEV(\"h3\", {\n    children: [\"Price:\", products.reduce((sum, i) => sum += i.count * i.price, 0)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Shop;\nexport default Shop;\n\nvar _c;\n\n$RefreshReg$(_c, \"Shop\");","map":{"version":3,"sources":["D:/acc/04/05/src/Shop.jsx"],"names":["React","useState","useEffect","Shop","test","Component","state","products","title","count","price","onChange","index","val","setState","map","product","i","render","ProductList","e","parseInt","target","value","Total","reduce","sum"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;AACA,MAAMC,IAAI,GAAG,MAAM;AACnB,QAAMC,IAAN,SAAmBJ,KAAK,CAACK,SAAzB,CAAmC;AAAA;AAAA;AAAA,WAC/BC,KAD+B,GACvB;AACNC,QAAAA,QAAQ,EAAE,CACR;AAACC,UAAAA,KAAK,EAAE,OAAR;AAAiBC,UAAAA,KAAK,EAAE,CAAxB;AAA2BC,UAAAA,KAAK,EAAE;AAAlC,SADQ,EAER;AAACF,UAAAA,KAAK,EAAE,KAAR;AAAeC,UAAAA,KAAK,EAAE,CAAtB;AAAyBC,UAAAA,KAAK,EAAE;AAAhC,SAFQ,EAGR;AAACF,UAAAA,KAAK,EAAE,IAAR;AAAcC,UAAAA,KAAK,EAAE,CAArB;AAAwBC,UAAAA,KAAK,EAAE;AAA/B,SAHQ;AADJ,OADuB;;AAAA,WAS/BC,QAT+B,GASpB,CAACC,KAAD,EAAQC,GAAR,KAAgB;AACzBC,QAAAA,QAAQ,CACNP,QAAQ,CAACQ,GAAT,CAAa,CAACC,OAAD,EAAUC,CAAV,KACXA,CAAC,KAAKL,KAAN,GAAc,EAAC,GAAGI,OAAJ;AAAaP,UAAAA,KAAK,EAAEI;AAApB,SAAd,GAAyCG,OAD3C,CADM,CAAR;AAMD,OAhB8B;AAAA;;AAkB/BE,IAAAA,MAAM,GAAI;AACR,0BACE;AAAA,gCACE,QAAC,WAAD;AAAa,UAAA,QAAQ,EAAE,KAAKZ,KAAL,CAAWC,QAAlC;AAA4C,UAAA,QAAQ,EAAE,KAAKI;AAA3D;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,KAAD;AAAO,UAAA,QAAQ,EAAE,KAAKL,KAAL,CAAWC;AAA5B;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AAMD;;AAzB8B;;AA0BhC;;AAED,QAAMY,WAAW,GAAG,CAAC;AAAEZ,IAAAA,QAAF;AAAYI,IAAAA;AAAZ,GAAD,kBAClB;AAAI,IAAA,SAAS,EAAC,WAAd;AAAA,cACGJ,QAAQ,CAACQ,GAAT,CAAa,CAACC,OAAD,EAAUC,CAAV,kBACZ;AAAA,iBACGD,OAAO,CAACR,KADX,eAEE;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,KAAK,EAAEQ,OAAO,CAACP,KAFjB;AAGE,QAAA,QAAQ,EAAEW,CAAC,IAAIT,QAAQ,CAACM,CAAD,EAAII,QAAQ,CAACD,CAAC,CAACE,MAAF,CAASC,KAAV,CAAR,IAA4B,CAAhC;AAHzB;AAAA;AAAA;AAAA;AAAA,cAFF,eAOE;AAAA,kBAAKP,OAAO,CAACP;AAAb;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA,OAASQ,CAAT;AAAA;AAAA;AAAA;AAAA,YADD;AADH;AAAA;AAAA;AAAA;AAAA,UADF;;AAgBA,QAAMO,KAAK,GAAG,CAAC;AAAEjB,IAAAA;AAAF,GAAD,kBACZ;AAAA,yBAEGA,QAAQ,CAACkB,MAAT,CAAgB,CAACC,GAAD,EAAMT,CAAN,KACfS,GAAG,IAAIT,CAAC,CAACR,KAAF,GAAUQ,CAAC,CAACP,KADpB,EAEE,CAFF,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASK,CAtDP;;KAAMP,I;AAuDJ,eAAeA,IAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nconst Shop = () => {\r\nclass test extends React.Component {\r\n    state = {\r\n      products: [\r\n        {title: 'Apple', count: 0, price: 100},\r\n        {title: 'IBM', count: 0, price: 200},\r\n        {title: 'HP', count: 0, price: 300},\r\n      ]\r\n    }\r\n    \r\n    onChange = (index, val) => {\r\n      setState(\r\n        products.map((product, i) => (\r\n          i === index ? {...product, count: val} : product\r\n         \r\n        ))\r\n      )\r\n    }\r\n  \r\n    render () {\r\n      return (\r\n        <div>\r\n          <ProductList products={this.state.products} onChange={this.onChange} />\r\n          <Total products={this.state.products} />\r\n        </div>\r\n      )\r\n    }\r\n  };\r\n  \r\n  const ProductList = ({ products, onChange }) => (\r\n    <ul className=\"container\">\r\n      {products.map((product, i) => (\r\n        <li key={i}>\r\n          {product.title}\r\n          <input \r\n            type=\"number\" \r\n            value={product.count}\r\n            onChange={e => onChange(i, parseInt(e.target.value) || 0)}\r\n          />\r\n          <h5>{product.count}</h5>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n  \r\n  const Total = ({ products }) => (\r\n    <h3>\r\n      Price: \r\n      {products.reduce((sum, i) => (\r\n        sum += i.count * i.price\r\n      ), 0)}\r\n      \r\n    </h3>\r\n  )\r\n      }\r\n  export default Shop;\r\n  "]},"metadata":{},"sourceType":"module"}